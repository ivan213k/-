<Window x:Class="Управление_заказами.Views.CheckEquipmentWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
        xmlns:local="clr-namespace:Управление_заказами.Views"
        xmlns:viewModels="clr-namespace:Управление_заказами.ViewModels"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="Проверка наличия оборудования" WindowStartupLocation="CenterScreen" Height="600" Width="1100" fw:AcrylicWindow.Enabled="True">
    <Window.Resources>
        <Style BasedOn="{StaticResource ButtonRevealStyle}" TargetType="Button">

        </Style>
        <Style BasedOn="{StaticResource TextBoxRevealStyle}" TargetType="TextBox">

        </Style>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    </Window.Resources>
    <Window.DataContext>
        <viewModels:CheckEquipmentViewModel/>
    </Window.DataContext>
    <Grid fw:PointerTracker.Enabled="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <GroupBox Margin="5" Header="Добавление оборудования">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="5" Text="Категория"></TextBlock>
                        <ComboBox SelectedValue="{Binding SelectedCategory,Mode=TwoWay}" ItemsSource="{Binding Categoryes}" Margin="30 5 5 5" Width="323"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="5" Text="Оборудование"></TextBlock>
                        <ComboBox IsTextSearchEnabled="True"  SelectedIndex="{Binding SelectedEquipmentIndex,Mode=OneWayToSource}" SelectedValue="{Binding SelectedEquipment,Mode=TwoWay}" ItemsSource="{Binding SelectedEquipments}" Margin="5" MinWidth="100" Width="321" Height="25"></ComboBox>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Top" Height="20" Margin="5,5,23,5" Text="Количество"></TextBlock>
                        <xctk:IntegerUpDown Height="20" DisplayDefaultValueOnEmptyText="True" DefaultValue="1" Width="70" Value="{Binding Count,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Minimum="0" TextAlignment="Left" Margin="5" VerticalAlignment="Top"/>
                        
                        <Image Stretch="Fill"  Margin="5" Width="208" Height="150" 
                               Source="{Binding SelectedImage}">
                            
                        </Image>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="5 10" Text="Целевая дата:"></TextBlock>
                        <xctk:DateTimePicker Style="{StaticResource DateTimePickerTime}"  Margin="35 5" Value="{Binding StartDate,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="5 10" Text="Дата возвращения:"></TextBlock>
                        <xctk:DateTimePicker Margin="5" Style="{StaticResource DateTimePickerTime}" Value="{Binding EndDate, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                    <Button Grid.Column="1" VerticalAlignment="Top" Command="{Binding AddEquipmentCommand}" Margin="10 0" Foreground="White" FontWeight="Bold"  Content="Добавить оборудование" ></Button>

                </StackPanel>
            </GroupBox>

            <GroupBox Margin="5"  Grid.Column="2" Header="Оборудование для проверки">
                <Grid fw:PointerTracker.Enabled="True">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <ListView SelectedValue="{Binding SelectedEquipmentForCheck,Mode=TwoWay}" Name="ListView" ItemsSource="{Binding SelectedEquipmentsForCheck}" >
                        <ListView.InputBindings>
                            <KeyBinding Key="Delete" Command="{Binding RemoveEquipmentCommand}">

                            </KeyBinding>
                        </ListView.InputBindings>
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem  Header="Удалить" Command="{Binding RemoveEquipmentCommand}"></MenuItem>
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                               
                                <Grid>
                                    
                                    <Grid.ToolTip>
                                        <Image Width="150" Height="150" Source="{Binding ImageUrl}"></Image>
                                    </Grid.ToolTip>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Margin="5" HorizontalAlignment="Left" Text="{Binding Name}"></TextBlock>
                                    <TextBlock Margin="5" Grid.Column="1"   HorizontalAlignment="Left"  Text="{Binding StringFormat=Количество {0} шт., Path=Count}"></TextBlock>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <Button Grid.Row="1" Command="{Binding CheckCommand}" Foreground="White" FontWeight="Bold" Margin="5,5.12,4.71,-0.12" Content="Проверить наличие"></Button>

                </Grid>

            </GroupBox>
        </Grid>

        <Grid Grid.Row="1" fw:PointerTracker.Enabled="True">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"></RowDefinition>
            </Grid.RowDefinitions>
            <DataGrid Style="{StaticResource DatagridStyle}" IsReadOnly="True" AutoGenerateColumns="False" ItemsSource="{Binding CheckResult}">
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="ToolTip">
                            <Setter.Value>
                                <Image Width="150" Height="150" Source="{Binding ImageUrl}" />
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="FontWeight" Value="Bold" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsEnough}" Value="false">
                                <Setter Property="Foreground" Value="Red"/>
                                <Setter Property="BorderBrush" Value="Red"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsEnough}" Value="true">
                                <Setter Property="Foreground" Value="Green"/>
                                <Setter Property="BorderBrush" Value="Green"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Название оборудования" Binding="{Binding  Name}"/>
                    <DataGridTextColumn Header="Необходимое количество" Binding="{Binding NeedCount}" />
                    <DataGridTextColumn Header="Остаток на складе" Binding="{Binding Balance}"/>
                    <DataGridTextColumn Header="Доступно в диапазоне указанных дат" Binding="{Binding AvalibleInSelectedDateRange}">

                    </DataGridTextColumn>
                    <DataGridTextColumn Visibility="Collapsed" Header="Результат" Binding="{Binding Result}"/>
                    <DataGridTextColumn Header="Не хватает" Binding="{Binding NotEnough}"/>
                    <DataGridTextColumn Header="Общее количество" Binding="{Binding TotalCount}"/>
                </DataGrid.Columns>
            </DataGrid>
            <Button Command="{Binding GoToCreateOrderCommand}" Grid.Row="1"  Grid.Column="1" Margin="5" Foreground="White" Content="Перейти к созданию заказа" ></Button>
            <StackPanel Visibility="{Binding IsDeterminate,Converter={StaticResource BoolToVisibilityConverter}}"  Grid.Row="2">
                <TextBlock Margin="10 0 0 5" Text="Подключение к базе данных"></TextBlock>
                <ProgressBar Foreground="Blue" IsIndeterminate="{Binding IsDeterminate}"  Height="20"></ProgressBar>
            </StackPanel>
        </Grid>
    </Grid>

</Window>
