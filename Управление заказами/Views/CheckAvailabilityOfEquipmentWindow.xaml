<Window x:Class="Управление_заказами.Views.CheckAvailabilityOfEquipmentWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:Управление_заказами.Views"
        xmlns:viewmodels="clr-namespace:Управление_заказами.ViewModels"
        mc:Ignorable="d"
        Title="Проверка наличия оборудования" WindowStartupLocation="CenterScreen" fw:AcrylicWindow.Enabled="True" Height="367.139" Width="760.482">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    </Window.Resources>
    <Window.DataContext>
        <viewmodels:CheckAvailabilityOfEquipmentViewModel/>
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <GroupBox Margin="5" Header="Оборудование для проверки">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Margin="5" Text="Категория:"/>
                <ComboBox Grid.Column="1" Margin="5" SelectedValue="{Binding SelectedCategory,Mode=TwoWay}" ItemsSource="{Binding Categoryes}" />

                <TextBlock Grid.Row="1" Margin="5" Text="Оборудование:"/>
                <ComboBox Grid.Row="1" Grid.Column="1" Margin="5" IsTextSearchEnabled="True"  SelectedIndex="{Binding SelectedEquipmentIndex,Mode=OneWayToSource}" SelectedValue="{Binding SelectedEquipment,Mode=TwoWay}" ItemsSource="{Binding SelectedEquipments}"/>

                <TextBlock Grid.Row="2" Margin="5" VerticalAlignment="Top" Height="20" Text="Количество:"/>
                <xctk:IntegerUpDown Grid.Row="2" Grid.Column="1" Margin="5" Height="20" HorizontalAlignment="Left" DisplayDefaultValueOnEmptyText="True" DefaultValue="1" Width="70" Value="{Binding Count,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Minimum="0" TextAlignment="Left" VerticalAlignment="Top"/>

                <TextBlock Grid.Row="3" Margin="5" Text="Дата и время забора:"/>
                <xctk:DateTimePicker AutoCloseCalendar="True" Grid.Row="3" Grid.Column="1" Margin="5" HorizontalAlignment="Left" Style="{StaticResource DateTimePickerTime}"  Value="{Binding StartDate,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>

                <TextBlock Grid.Row="4" Margin="5" Text="Дата и время возврата:"/>
                <xctk:DateTimePicker AutoCloseCalendar="True" Grid.Row="4" Grid.Column="1" Margin="5" HorizontalAlignment="Left" Style="{StaticResource DateTimePickerTime}" Value="{Binding EndDate, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </GroupBox>
        <GroupBox Header="Результат проверки" Grid.Row="1">
            <DataGrid Margin="5" Style="{StaticResource DatagridStyle}" IsReadOnly="True" AutoGenerateColumns="False" ItemsSource="{Binding CheckResult}">
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="ToolTip">
                            <Setter.Value>
                                <Image Width="150" Height="150" Source="{Binding ImageUrl}" />
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="FontWeight" Value="Bold" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsEnough}" Value="false">
                                <Setter Property="Foreground" Value="Red"/>
                                <Setter Property="BorderBrush" Value="Red"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsEnough}" Value="true">
                                <Setter Property="Foreground" Value="Green"/>
                                <Setter Property="BorderBrush" Value="Green"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Останется на складе" Binding="{Binding WillRemainInStock}"/>
                    <DataGridTextColumn Header="Доступно в диапазоне указанных дат" Binding="{Binding TotalAvalibleCount}"/>
                    <DataGridTextColumn Visibility="Collapsed" Header="Результат" Binding="{Binding Result}"/>
                    <DataGridTextColumn Header="Не хватает" Binding="{Binding NotEnough}"/>
                    <DataGridTextColumn Header="Общее количество на складе(согласно инвенаризации)" Binding="{Binding TotalCount}"/>
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>
        <StackPanel Visibility="{Binding IsDeterminate,Converter={StaticResource BoolToVisibilityConverter}}"  Grid.Row="2">
            <ProgressBar Foreground="Blue" IsIndeterminate="{Binding IsDeterminate}"  Height="20"/>
        </StackPanel>
    </Grid>
</Window>
